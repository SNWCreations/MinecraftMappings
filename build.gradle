plugins {
    id 'java'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'io.jadon'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

configurations {
    include
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        name "Modmuss50 Repository"
        url 'https://maven.modmuss50.me'
    }
    maven {
        name 'FabricMC'
        url 'https://maven.fabricmc.net'
    }
}

dependencies {
    include "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    include 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'

    include 'com.github.phase:SrgLib:master-SNAPSHOT'
    include "com.opencsv:opencsv:3.9"
    include 'com.google.code.gson:gson:2.8.6'
    include "com.google.guava:guava:21.0"
    include "net.md-5:SpecialSource:1.8.5"
    include "cuchaz:enigma:0.13.1.+:all"
    include 'org.cadixdev:lorenz:0.5.2'
    include 'org.cadixdev:lorenz-io-proguard:0.5.2'
    include 'net.fabricmc:mapping-io:0.5.1'
    include 'net.sf.jopt-simple:jopt-simple:5.0.4'
    include 'cn.hutool:hutool-core:5.8.16'

	configurations.compile.extendsFrom(configurations.include)
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

if (System.getProperty("fatjar") == "true") {
    jar.enabled = false
    shadowJar {
        archiveBaseName = project.name
        archiveClassifier = null
        version = project.version
        manifest {
            attributes 'Main-Class': 'io.jadon.mapping_generator.MainKt'
        }
    }
    assemble.dependsOn(shadowJar)
}

jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//    manifest {
//        attributes(
//            'Main-Class': 'io.jadon.mapping_generator.MainKt'
//        )
//    }
//    if ("true" == System.getProperty("fatjar")) {
//        from {
//            configurations.include.collect { it.isDirectory() ? it : zipTree(it) }
//        }
//    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version

            from components.java
        }
    }
}